@use 'mixins' as mix;
@use 'variables' as var;

header {
    @include mix.flex(column, 0.375rem);

    h1 {
        font-size: var.$large;
        color: var.$color-blue-gray-800;
    }
    p {
        font-size: var.$small;
        color: var.$color-blue-gray-500;
    }
}

header, form {
    width: min(39.4375rem, 100%);
    height: fit-content;
    margin: auto;
}

.container {
    width: 100%;
    height: 100%;
    @include mix.flex(row, 0);
    @include mix.flex-position(space-between, center);
    display: block;
    overflow: hidden;
    position: relative;

    .tab-view-container {
        flex: 1;
    }

    .save-changes-btn {
        @include mix.primary-button(fit-content);
        height: fit-content;
        position: absolute;
        top: 0.65rem;
        right: 1rem;
        padding: 0.5rem 0.75rem;
    }
    
    .content-container {
        overflow-y: scroll;
        scrollbar-width: none;

    }
    
    .title {
        font-size: 1.125rem;
        font-style: normal;
        font-weight: 500;
        line-height: 1.75rem;
        margin-bottom: 0.25rem;
        color: var.$color-blue-gray-800;
    }
    .password-description {
        margin-bottom: 2rem;
    }

    form {
        @include mix.flex(column, 1.5rem);
        width: min(39.4375rem, 100%);
        height: fit-content;
        margin: auto;

        label {
            font-size: 1.125rem;
            font-style: normal;
            font-weight: 500;
            line-height: 1.75rem;
            margin-bottom: 0.25rem;
        }
        label, input.p-inputtext  {
            color: var.$color-blue-gray-800;
        }
        .description {
            font-size: 0.875rem;
            font-style: normal;
            font-weight: 400;
            line-height: 1.25rem;
            margin-bottom: 1rem;
        }
        input.p-inputtext  {
            width: 100%;
        }
        input.email.p-inputtext {
            background-color: var.$color-blue-gray-100;
        }
        input {
            height: 3rem;
        }

        // file upload
        .upload {
            .upload-section {
                @include mix.flex(column, 0.1rem);
                @include mix.flex-position(center, center);
                width: 100%;
                height: 207px;
                position: relative;
                border: 1px dashed var.$color-blue-gray-500;
                border-radius: var.$small;
                .instructions {
                    @include mix.flex(column, 0.1rem);
                    @include mix.flex-position(flex-start, center);
                }
                p {
                    font-size: var.$small;
                }
                input {
                    width: 100%;
                    height: 100%;
                    opacity: 0;
                    position: absolute;
                }
                img {
                    width: 3.57906rem;
                    height: 2.79319rem;
                }
                .drop-here {
                    color: var.$color-blue-500;
                    margin-top: 0.88rem;
                }
            }
            .preview {
                width: 100%;
                height: 100%;
                img {
                    width: 100%;
                    height: 100%;
                    object-fit: contain;
                }
            }
              
        }
        .uploaded-file {
            @include mix.flex(row, 0.1rem);
            @include mix.flex-position(flex-start, flex-start);
            margin-bottom: 1rem;

            button {
                border: none;
                background-color: transparent;
            }
            &.on-drag {
                border-color: var.$color-blue-500;
                transition: all 500ms ease-in-out;
            }
        }
        
    }
}

// for file uploads
.upload {
    .upload-section {
        @include mix.flex(column, 0.1rem);
        @include mix.flex-position(center, center);
        width: 100%;
        height: 207px;
        position: relative;
        border: 1px dashed var.$color-blue-gray-500;
        border-radius: var.$small;
        .instructions {
            @include mix.flex(column, 0.1rem);
            @include mix.flex-position(flex-start, center);
        }
        p {
            font-size: var.$small;
        }
        input {
            width: 100%;
            height: 100%;
            opacity: 0;
            position: absolute;
        }
        img {
            width: 3.57906rem;
            height: 2.79319rem;
        }
        .drop-here {
            color: var.$color-blue-500;
            margin-top: 0.88rem;
        }
    }
    .preview {
        width: 100%;
        height: 100%;
        img {
            width: 100%;
            height: 100%;
            object-fit: contain;
        }
    }
      
}
.uploaded-file {
    @include mix.flex(row, 0.1rem);
    @include mix.flex-position(flex-start, flex-start);
    margin-bottom: 1rem;

    button {
        border: none;
        background-color: transparent;
    }
    &.on-drag {
        border-color: var.$color-blue-500;
        transition: all 500ms ease-in-out;
    }
}



.upload-file {
    display: flex;
    width: 39.4375rem;
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
    margin: auto;
}
.username {
    font-size: 1.125rem;
    font-style: normal;
    font-weight: 500;
    line-height: 1.75rem;
    margin-bottom: 0.25rem;
}
.username, input.p-inputtext  {
    color: var.$color-blue-gray-800;
}
.description {
    font-size: 0.875rem;
    font-style: normal;
    font-weight: 400;
    line-height: 1.25rem;
    margin-bottom: 1rem;
}

// styling primeng component
::ng-deep {
    .p-tabview {
        @include mix.flex(column, 0);
        height: 100%;
    }
    .p-tabview-panels {
        flex: 1;
        overflow: auto;
        scrollbar-width: none;
    }
}

// Remove or modify the phone icon
::ng-deep {
    svg.icon.icon-tabler.icon-tabler-phone,
    label#mat-mdc-form-field-label-2 {
        display: none;
    }
    
    div.mat-mdc-form-field-infix,
    section .tel-form mat-form-field.prefix-form-field .mat-mdc-form-field-infix,
    .mat-mdc-form-field-infix {
        padding-block: 0 !important;
    }

    .mat-mdc-form-field-infix, mat-select#mat-select-0 {
        display: flex;
    }

    mat-hint#mat-mdc-hint-0 {
        display: none;
    }

    input {
        caret-color: blue;
    }
    input:hover {
        background-color: transparent;
    }
    // disabling label
    mat-label.main-label {
        display: none;
    }

    div.mat-mdc-text-field-wrapper.mdc-text-field.mdc-text-field--filled:hover {
        background-color: red !important;
    }
    section.tel-formmat-form-field.mat-mdc-text-field-wrapper:hover {
        background-color: red !important;

    }
    .mdc-floating-label.mat-mdc-floating-label {
        display: none;
    }
    
    .tel-form {
        height: 3.125rem;
    }
    .mat-mdc-select-trigger {
        height: 3.125rem;
    }

    .mat-mdc-text-field-wrapper.mdc-text-field.mdc-text-field--filled:hover {
        height: 3.125rem;
        background: transparent !important;
    }
    .mat-mdc-form-field-flex {
        height: 3.125rem;
    }
    input#mat-input-0 {
        height: 3.125rem;
    }
}