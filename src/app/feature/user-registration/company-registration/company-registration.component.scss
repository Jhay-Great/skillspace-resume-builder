@use '../../../scss/mixins' as mix;
@use '../../../scss/variables' as var;
@use '../../../scss/functions' as func;

.logo {
    @include mix.flex(row, 0);
    @include mix.flex-position(center, center);

    span {
        font-size: var.$large;
        font-weight: 600;
        color: var.$color-blue-500;
    }
}

header {
    @include mix.flex(column, 0.5);
    @include mix.flex-position(center, center);
    width: 100%;
    height: 100%;

    h1 {
        font-size: var.$xxlarge;
        color: var.$color-blue-gray-800;
    }
    .description {
        font-size: var.$medium;
        color: #667085;
    }
    nav {
        @include mix.flex();
        @include mix.flex-position(center, center);
        margin-top: 1.5rem;

        .steppers {
            @include mix.flex(row, 0.5rem);
            @include mix.flex-position();
            cursor: pointer;

            &.active {
                p {
                    color: var.$color-blue-500;

                }
                span {
                    border-color: var.$color-blue-500;
                    color: var.$color-blue-500;
                }

            }

            span {
                @include mix.flex(row, _);
                @include mix.flex-position(center, center);
                width: func.pixelsToRem(20);
                height: func.pixelsToRem(20);
                border-radius: 50%;
                border: func.pixelsToRem(1) solid var.$color-blue-gray-400;
                color: var.$color-blue-gray-400
            }

            p {
                color: var.$color-blue-gray-400;
                font-size: var.$medium;
            }
        }
    }
}

form {
    @include mix.flex(column);
    
    & > section {
        @include mix.flex(column);

    }
    .fields {
        label {
            @include mix.label();
        }
        .input-container {
            @include mix.flex();
            width: 100%;
            height: fit-content;
            position: relative;

            img {
                width: func.pixelsToRem(20);
                aspect-ratio: 1;
                position: absolute;
                top: 50%;
                left: func.pixelsToRem(10);
                transform: translateY(-50%);
            }
        }
        input {
            width: 100%;
            height: 100%;
            height: func.pixelsToRem(48);
            border-radius: func.pixelsToRem(4);
            padding: func.pixelsToRem(12);
            padding-left: 2.5rem;
            border: func.pixelsToRem(1) solid var.$color-blue-gray-300;
            outline: none;
    
            &::placeholder {
                color: var.$color-blue-gray-500;
            }
    
            &:focus, &:active {
                border: func.pixelsToRem(1) solid var.$color-blue-500;
            }
        }
        @include mix.flex(column, 0.5rem);
    }

    button {
        @include mix.primary-button();
        padding-block: func.pixelsToRem(10);
    }


}

.log-in {
    width: 100%;
    height: fit-content;
    text-align: center;

    p {
        font-size: var.$small;
        font-weight: 400;
        color: var.$color-blue-gray-800;
        
        a {
            @include mix.link();
        }
    }
}

.info {
    width: 100%;
    height: fit-content;
    text-align: center;
    p {
        font-size: var.$small;
        font-weight: 400;
        color: var.$color-blue-gray-800;
        .terms_policy {
            text-decoration: none;
            border-bottom: func.pixelsToRem(1) solid var.$color-blue-gray-800;
            color: var.$color-blue-gray-800;
            cursor: pointer;
        }

    }
}