@use './app/scss/mixins' as mix;
@use './app/scss/variables' as var;
@use './app/scss/functions' as func;

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$skillspace-resume-builder-primary: mat.define-palette(mat.$indigo-palette);
$skillspace-resume-builder-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$skillspace-resume-builder-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$skillspace-resume-builder-theme: mat.define-light-theme((
  color: (
    primary: $skillspace-resume-builder-primary,
    accent: $skillspace-resume-builder-accent,
    warn: $skillspace-resume-builder-warn,
  ),
  typography: mat.define-typography-config(),
  density: 0
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($skillspace-resume-builder-theme);

// primeng packages
@import "primeng/resources/themes/lara-light-blue/theme.css";
@import "primeng/resources/primeng.css";
@import "primeicons/primeicons.css";


/* Box sizing rules*/
* {
  box-sizing: border-box;
  font-family: var.$font-family;
  &::before,
  &::after {
    box-sizing: border-box;
  }
}
 /* Prevent font size inflation*/

html {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
}
/* Remove default margin in favour of better control in authored CSS*/

body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin-block-end: 0;
  margin-block-start: 0;
}
/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed*/

ul[role="list"],
ol[role="list"] {
  list-style: none;
}
/* Set core body defaults*/

body {
  line-height: 1.5;
  width: 100%;
  height: 100vh;
  margin: 0;
} //   min-height: 100vh

/* Set shorter line heights on headings and interactive elements*/

h1,
h2,
h3,
h4,
button,
input,
label {
  line-height: 1.1;
}
/* Balance text wrapping on headings*/

h1,
h2,
h3,
h4 {
  text-wrap: balance;
}
/* A elements that don't have a class get default styles*/

a:not([class]) {
  text-decoration-skip-ink: auto;
  color: currentColor;
}
/* Make images easier to work with*/

img,
picture {
  max-width: 100%;
  display: block;
}
/* Inherit fonts for inputs and buttons*/

input,
button,
textarea,
select {
  font-family: inherit;
  font-size: inherit;
}
/* Make sure textareas without a rows attribute are not tiny*/

textarea:not([rows]) {
  min-height: 10em;
}
/* Anything that has been anchored to should have extra scroll margin*/

\:target {
  scroll-margin-block: 5ex;
}
button {
  cursor: pointer;
}

app-root {
  @include mix.flex(column, 0);
  @extend body;
}
app-auth-layout,
app-dashboard-layout {
  @extend app-root;
}
app-auth-layout {
  @include mix.flex();
  @include mix.flex-position(center, center);
  position: relative;
}
app-dashboard-layout {
    display: grid;
    grid-template-columns: 15.625rem 1fr 1fr;
    grid-template-rows: 4.375rem auto auto;
}
app-company-registration {
    @include mix.flex(column);
    
}
app-registration-feedback {
    @include mix.flex(column, 2rem);
    @include mix.flex-position(center, center);
    position: fixed;
    inset: 0;
    height: 100%;
    width: 100%;
}
app-company-registration {
    @include mix.flex(column);
    
}
// company profile management
app-profile-management {
  @include mix.flex(column, 2rem);
  width: 100%;
  height: 100%;
}

// hides router-outlet tag
router-outlet {
  display: none;
}

// UTILITY CLASSES
.input-group {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.text-warning {
  color: var.$color-red-600;
}

.link {
  color: var.$color-blue-500;
  text-decoration: none;
  cursor: pointer;

  &:hover {
    text-decoration: underline;
  }
}


